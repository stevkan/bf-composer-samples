{
  "$kind": "Microsoft.AdaptiveDialog",
  "$designer": {
    "$designer": {
      "name": "QnAMakerLUISSample-0-v1-4-1",
      "description": "",
      "id": "vZZiMm"
    }
  },
  "autoEndDialog": true,
  "defaultResultProperty": "dialog.result",
  "recognizer": "QnAMakerLUISSample-0-v1-4-1.lu.qna",
  "triggers": [
    {
      "$kind": "Microsoft.OnConversationUpdateActivity",
      "$designer": {
        "id": "376720",
        "name": "Welcome message"
      },
      "actions": [
        {
          "$kind": "Microsoft.Foreach",
          "$designer": {
            "id": "518944",
            "name": "Loop: for each item"
          },
          "itemsProperty": "turn.Activity.membersAdded",
          "actions": [
            {
              "$kind": "Microsoft.IfCondition",
              "$designer": {
                "id": "641773",
                "name": "Branch: if/else"
              },
              "condition": "string(dialog.foreach.value.id) != string(turn.Activity.Recipient.id)",
              "actions": [
                {
                  "$kind": "Microsoft.SendActivity",
                  "$designer": {
                    "id": "266608",
                    "name": "Send a response"
                  },
                  "activity": "${SendActivity_266608()}"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "$kind": "Microsoft.OnUnknownIntent",
      "$designer": {
        "id": "777383"
      },
      "actions": [
        {
          "$kind": "Microsoft.SendActivity",
          "$designer": {
            "id": "cz7I3B"
          },
          "activity": "${SendActivity_cz7I3B()}"
        },
        {
          "$kind": "Microsoft.QnAMakerDialog",
          "$designer": {
            "id": "284337",
            "name": "Connect to QnA Knowledgebase"
          },
          "knowledgeBaseId": "=settings.qna.knowledgebaseid",
          "endpointKey": "=settings.qna.endpointkey",
          "hostname": "=settings.qna.hostname",
          "noAnswer": "Sorry, I did not find an answer.",
          "threshold": 0.3,
          "activeLearningCardTitle": "Did you mean:",
          "cardNoMatchText": "None of the above.",
          "cardNoMatchResponse": "Thanks for the feedback.",
          "top": 3,
          "disabled": true
        }
      ],
      "priority": 2,
      "condition": false
    },
    {
      "$kind": "Microsoft.OnQnAMatch",
      "$designer": {
        "id": "2b4wVZ"
      },
      "actions": [
        {
          "$kind": "Microsoft.IfCondition",
          "$designer": {
            "id": "TyMavt"
          },
          "condition": "count(turn.recognized.answers[0].context.prompts) > 0",
          "actions": [
            {
              "$kind": "Microsoft.SetProperty",
              "$designer": {
                "id": "vbwBeS"
              },
              "property": "dialog.qnaContext",
              "value": "=turn.recognized.answers[0].context.prompts"
            },
            {
              "$kind": "Microsoft.TextInput",
              "$designer": {
                "id": "WiKVOE"
              },
              "maxTurnCount": 3,
              "alwaysPrompt": true,
              "allowInterruptions": false,
              "prompt": "${TextInput_Prompt_IL9p4C()}",
              "property": "turn.qnaMultiTurnResponse"
            },
            {
              "$kind": "Microsoft.SetProperty",
              "$designer": {
                "id": "lLnDFT"
              },
              "property": "turn.qnaMatchFromContext",
              "value": "=where(dialog.qnaContext, item, item.displayText == turn.qnaMultiTurnResponse)"
            },
            {
              "$kind": "Microsoft.DeleteProperty",
              "$designer": {
                "id": "OsFNNv"
              },
              "property": "dialog.qnaContext"
            },
            {
              "$kind": "Microsoft.IfCondition",
              "$designer": {
                "id": "eXbxwc"
              },
              "condition": "turn.qnaMatchFromContext && count(turn.qnaMatchFromContext) > 0",
              "actions": [
                {
                  "$kind": "Microsoft.SetProperty",
                  "$designer": {
                    "id": "v6AuOm"
                  },
                  "property": "turn.qnaIdFromPrompt",
                  "value": "=turn.qnaMatchFromContext[0].qnaId"
                }
              ]
            },
            {
              "$kind": "Microsoft.EmitEvent",
              "$designer": {
                "id": "6zfVdw"
              },
              "eventName": "activityReceived",
              "eventValue": "=turn.activity"
            }
          ],
          "elseActions": [
            {
              "$kind": "Microsoft.SendActivity",
              "$designer": {
                "id": "Jf2XvI"
              },
              "activity": "${SendActivity_8Jcxhf()}"
            }
          ]
        }
      ],
      "priority": 1,
      "condition": true
    }
  ],
  "$schema": "https://raw.githubusercontent.com/microsoft/BotFramework-Composer/stable/Composer/packages/server/schemas/sdk.schema",
  "generator": "QnAMakerLUISSample-0-v1-4-1.lg",
  "id": "QnAMakerLUISSample-0-v1-4-1"
}
